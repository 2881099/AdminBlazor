@page "/Admin/Test"
@using BootstrapBlazor.Components
@using System

<PageTitle>测试</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">

            <AdminTable2 TItem="MenuEntity" Context="item" PageSize="-1" Title="测试"DialogClassName="modal-lg"
                IsSearchText="false"
                OnQuery="OnQuery" InitQuery="InitQuery" OnEdit="OnEdit">

                <TableHeader>
                    <th>ParentId</th>
                    <th>Label</th>
                    <th>Icon</th>
                    <th>Path</th>
                    <th>PathLower</th>
                    <th>TargetBlank</th>
                    <th>Sort</th>
                    <th>Type</th>
                </TableHeader>
                <TableTh1>Label</TableTh1>
                <TableTd1>@item.Label</TableTd1>
                <TableRow>
                    <td>@item.ParentId</td>
                    <td>@item.Label</td>
                    <td>@item.Icon</td>
                    <td>@item.Path</td>
                    <td>@item.PathLower</td>
                    <td>@item.TargetBlank</td>
                    <td>@item.Sort</td>
                    <td>@item.Type</td>
                </TableRow>
                <EditTemplate>
                    <div class="row">
                        <div class="form-group col-6">
                            <label class="form-label">ParentId</label>
                            <SelectEntity TItem="MenuEntity" TKey="long" @bind-Value="item.ParentId" DisplayText="e => e.Label" />
                        </div>
                        <div class="form-group col-6">
                            <label class="form-label">Label</label>
                            <input @bind="item.Label" type="text" class="form-control" placeholder="" maxlength="255">
                        </div>
                        <div class="form-group col-6">
                            <label class="form-label">Icon</label>
                            <input @bind="item.Icon" type="text" class="form-control" placeholder="" maxlength="255">
                        </div>
                        <div class="form-group col-6">
                            <label class="form-label">Path</label>
                            <input @bind="item.Path" type="text" class="form-control" placeholder="" maxlength="255">
                        </div>
                        <div class="form-group col-6">
                            <label class="form-label">PathLower</label>
                            <input @bind="item.PathLower" type="text" class="form-control" placeholder="" maxlength="255">
                        </div>
                        <div class="form-group col-6">
                            <label class="form-label">TargetBlank</label>
                            <Switch @bind-Value="item.TargetBlank" OnColor="Color.Success" />
                        </div>
                        <div class="form-group col-6">
                            <label class="form-label">Sort</label>
                            <input @bind="item.Sort" type="number" class="form-control" placeholder="">
                        </div>
                        <div class="form-group col-6">
                            <label class="form-label">Type</label>
                            <SelectEnum TEnum="MenuEntityType" @bind-Value="item.Type" />
                        </div>
                        <div class="form-group col-12">
                            <label class="form-label">Roles</label>
                            <SelectTable2 TItem="RoleEntity" TKey="long" @bind-Items="item.Roles" IsSearchText="false" PageSize="-1">
                                <TableTd1>@context.Name</TableTd1>
                            </SelectTable2>
                        </div>
                    </div>
                </EditTemplate> 
            </AdminTable2>
        </div>
    </div>
</div>

@code {

    [Inject] IAggregateRootRepository<MenuEntity> repository { get; set; }

    async Task InitQuery(AdminQueryInfo e)
    {
        var allRoles = await fsql.Select<RoleEntity>().ToListAsync();
        e.Filters = new AdminFilterInfo[]
        {
            new AdminFilterInfo("Type", "Type", "菜单,按钮,外部连接,增删改查", "0,1,2,3"),
            new AdminFilterInfo("Roles", "Roles", true, 12, 
                string.Join(",", allRoles.Select(a => a.Name)), 
                string.Join(",", allRoles.Select(a => a.Id))),
        };
        await Task.Yield();
    }
    void OnQuery(AdminQueryEventArgs<MenuEntity> e)
    {
        e.Select.WhereIf(e.Filters[0].HasValue, a => a.Type == e.Filters[0].Value<MenuEntityType>())
            .WhereIf(e.Filters[1].HasValue, a => a.Roles.Any(b => e.Filters[1].Values<long>().Contains(b.Id)));
    }

    async Task OnEdit(MenuEntity item)
    {
        if (item.Roles == null)
        {
            if (item.Id == default) item.Roles = new();
            else await new List<MenuEntity> { item }.IncludeManyAsync(repository.Orm, a => a.Roles);
            repository.Attach(item);
        }
        await Task.Yield();
    }
}
